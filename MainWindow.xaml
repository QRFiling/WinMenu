<Window x:Class="WinMenu.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WinMenu"
        mc:Ignorable="d"
        Title="" Height="935.193" Width="513.246" WindowStyle="None" ResizeMode="NoResize" ShowInTaskbar="False"
        Loaded="Window_Loaded" Topmost="True" x:Name="window" Deactivated="window_Deactivated" AllowsTransparency="True">

    <Window.Resources>
        <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="1,0,1,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="5" Background="Black" Margin="7.5,-18,-1,-18" Opacity="0.1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.3"
                                                                     Storyboard.TargetProperty="Opacity" To="0.3"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>

                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.3"
                                                                     Storyboard.TargetProperty="Opacity" To="0.1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>

                <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
                </RepeatButton>
                <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
                </RepeatButton>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        </Style>

        <Style x:Key="listBoxStyle" TargetType="ListBox">
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>

            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                        </Style.Resources>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid x:Name="itemGrid" Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType=ListBox}}"
                          MouseLeftButtonUp="itemGrid_MouseLeftButtonUp" MouseRightButtonUp="Border_MouseRightButtonUp" Visibility="{Binding DisplayVisibility}">

                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Height" Value="50"/>
                                    <Setter Property="Margin" Value="0,18,0,0"/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LetterSeparator}" Value="{x:Null}">
                                            <Setter Property="Height" Value="35"/>
                                            <Setter Property="Margin" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>

                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="separatorColumn">
                                    <RowDefinition.Style>
                                        <Style TargetType="RowDefinition">
                                            <Setter Property="Height" Value="17"/>

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding LetterSeparator}" Value="{x:Null}">
                                                    <Setter Property="Height" Value="0"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RowDefinition.Style>
                                </RowDefinition>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Grid x:Name="itemContentGrid" Grid.ColumnSpan="3" Grid.Row="1" RenderTransformOrigin="0.5,0.5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="0.55*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RenderTransform>
                                    <ScaleTransform/>
                                </Grid.RenderTransform>

                                <Border Grid.ColumnSpan="4" Grid.Row="1" CornerRadius="5" Margin="0,0,14,0" Opacity="0" Background="White">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=itemGrid, Path=IsMouseOver}" Value="True">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.1" To="0.85" Storyboard.TargetProperty="Opacity"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>

                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.1" To="0" Storyboard.TargetProperty="Opacity"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>

                                <Image Grid.Row="1" Source="{Binding Icon}" Margin="4"/>

                                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding DisplayName}" TextTrimming="CharacterEllipsis"
                                   Margin="10,5,5,5" VerticalAlignment="Center" FontSize="11" FontFamily="{StaticResource Montserrat Medium}"/>

                                <TextBlock Grid.Row="1" Grid.Column="3" Text="{Binding DisplayDate}" TextTrimming="CharacterEllipsis" Opacity="0.2"
                                   Margin="5,5,15,5" VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="11"/>

                                <Ellipse Fill="#0070C0" Grid.Column="2" Width="5" Height="5" HorizontalAlignment="Left" Margin="10,0,0,0">
                                    <Ellipse.Style>
                                        <Style TargetType="Ellipse">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding NewApp}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ellipse.Style>
                                </Ellipse>

                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <EventTrigger RoutedEvent="MouseLeftButtonDown">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.4" To="0.95">
                                                            <DoubleAnimation.EasingFunction>
                                                                <PowerEase Power="5"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>

                                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.4" To="0.95">
                                                            <DoubleAnimation.EasingFunction>
                                                                <PowerEase Power="5"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>

                                            <EventTrigger RoutedEvent="MouseUp">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.4" To="1">
                                                            <DoubleAnimation.EasingFunction>
                                                                <PowerEase Power="5"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>

                                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.4" To="1">
                                                            <DoubleAnimation.EasingFunction>
                                                                <PowerEase Power="5"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>

                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.4" To="1">
                                                            <DoubleAnimation.EasingFunction>
                                                                <PowerEase Power="5"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>

                                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.4" To="1">
                                                            <DoubleAnimation.EasingFunction>
                                                                <PowerEase Power="5"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                            </Grid>

                            <TextBlock Text="{Binding LetterSeparator}" IsHitTestVisible="False" Margin="7,0,0,5" Height="15" VerticalAlignment="Bottom"/>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" RenderTransformOrigin="0.5,0.5">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Black" Opacity="0.05"/>
                            </Border.BorderBrush>

                            <Border.RenderTransform>
                                <ScaleTransform/>
                            </Border.RenderTransform>

                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="BorderBrush.Opacity"
                                                                         Duration="0:0:0.15" To="0.15"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>

                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="BorderBrush.Opacity"
                                                                         Duration="0:0:0.15" To="0.05"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetName="border">
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                                         Duration="0:0:0.3" To="0.95">
                                                <DoubleAnimation.EasingFunction>
                                                    <PowerEase Power="5"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>

                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                                         Duration="0:0:0.3" To="0.95">
                                                <DoubleAnimation.EasingFunction>
                                                    <PowerEase Power="5"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>

                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetName="border">
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                                         Duration="0:0:0.3" To="1">
                                                <DoubleAnimation.EasingFunction>
                                                    <PowerEase Power="5"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>

                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                                         Duration="0:0:0.3" To="1">
                                                <DoubleAnimation.EasingFunction>
                                                    <PowerEase Power="5"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Popup">
            <Setter Property="Placement" Value="Absolute"/>
            <Setter Property="StaysOpen" Value="False"/>
            <Setter Property="AllowsTransparency" Value="True"/>

            <Style.Resources>
                <Style TargetType="Grid">
                    <Setter Property="Margin" Value="10"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TranslateTransform/>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Popup}, Path=IsOpen}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="-10" To="0" Duration="0:0:0.8">
                                            <DoubleAnimation.EasingFunction>
                                                <PowerEase Power="10"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="Border">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="CornerRadius" Value="5"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="MinWidth" Value="1"/>

                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush Color="Black" Opacity="0.05"/>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="8" Opacity="0.15"/>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="ListBox">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="0,5,0,6"/>
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>

                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Grid Margin="-2,0,0,0" Height="28">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="25"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="70"/>
                                        <ColumnDefinition Width="5"/>
                                    </Grid.ColumnDefinitions>

                                    <Image Source="{Binding Icon}" Grid.Column="1" Margin="4"/>

                                    <TextBlock Text="{Binding DisplayName}" Grid.Column="2" FontSize="10" VerticalAlignment="Center"
                                           Margin="10,0,0,0" FontFamily="{StaticResource Montserrat Medium}" MaxWidth="300" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis"/>

                                    <TextBlock Text="{Binding DisplayDate}" Grid.Column="3" FontSize="10" Opacity="0.3" Margin="0,0,15,0" 
                                               FontFamily="{StaticResource Montserrat Medium}" VerticalAlignment="Center" HorizontalAlignment="Right"/>

                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#0070C0"/>
                                                </Trigger>
                                            </Style.Triggers>

                                            <Style.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>

                                                <Style TargetType="Image">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsMouseOver}" Value="True"/>
                                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=Tag}" Value="invert"/>
                                                            </MultiDataTrigger.Conditions>

                                                            <Setter Property="Effect">
                                                                <Setter.Value>
                                                                    <local:InvertEffect/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Style.Resources>
                                        </Style>
                                    </Grid.Style>
                                </Grid>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal"/>
                    <Setter Property="Height" Value="70"/>

                    <Style.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="FontSize" Value="9.5"/>
                            <Setter Property="Opacity" Value="0.7"/>
                            <Setter Property="FontFamily" Value="{StaticResource Montserrat Medium}"/>
                        </Style>
                    </Style.Resources>
                </Style>
            </Style.Resources>
        </Style>
    </Window.Resources>
    
    <Window.Background>
        <LinearGradientBrush x:Name="background" Opacity="0.97">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>

    <Grid ShowGridLines="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="238"/>
            <ColumnDefinition Width="30"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="49"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Column="1" Text="Все программы" FontSize="11.5" FontFamily="{StaticResource Montserrat Semibold}"
                   VerticalAlignment="Bottom" Margin="5,0,15,3" TextTrimming="CharacterEllipsis"/>

        <TextBlock Grid.Column="2" Text="Закреплённые" FontSize="11.5" FontFamily="{StaticResource Montserrat Semibold}"
                   VerticalAlignment="Bottom" Margin="33,0,0,3" TextTrimming="CharacterEllipsis"/>

        <ListBox x:Name="appList" Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Style="{StaticResource listBoxStyle}" Margin="0,10,0,5"/>

        <ListBox x:Name="pinnedList" Grid.Row="1" Grid.Column="2" Background="Transparent" BorderThickness="0" Margin="15,15,-20,15"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">

            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Stretch" IsItemsHost="True" Margin="15,0,0,0"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <ListBox.Style>
                <Style TargetType="ListBox">
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>

            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                    </Style.Resources>
                </Style>
            </ListBox.ItemContainerStyle>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid x:Name="parentGrid" Width="100" Height="100" Margin="0,0,4,4" RenderTransformOrigin="0.5,0.5" Cursor="Hand"
                          MouseLeftButtonUp="parentGrid_MouseLeftButtonUp" MouseRightButtonUp="Border_MouseRightButtonUp">

                        <Grid.RenderTransform>
                            <ScaleTransform/>
                        </Grid.RenderTransform>

                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.4" To="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <PowerEase Power="5"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>

                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.4" To="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <PowerEase Power="5"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>

                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.4" To="1">
                                                        <DoubleAnimation.EasingFunction>
                                                            <PowerEase Power="5"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>

                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.4" To="1">
                                                        <DoubleAnimation.EasingFunction>
                                                            <PowerEase Power="5"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>

                                    <EventTrigger RoutedEvent="MouseLeftButtonDown">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="Focusable">
                                                    <DiscreteBooleanKeyFrame KeyTime="00:00:01" Value="False"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>

                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="Focusable">
                                                    <DiscreteBooleanKeyFrame KeyTime="00:00:01" Value="True"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>

                                    <EventTrigger RoutedEvent="MouseUp">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="Focusable">
                                                    <DiscreteBooleanKeyFrame KeyTime="00:00:01" Value="True"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Border CornerRadius="5" BorderThickness="1" Opacity="0.7" Background="White">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Black" Opacity="0.02"/>
                            </Border.BorderBrush>

                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=parentGrid, Path=IsMouseOver}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>

                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.7"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <TextBlock Text="{Binding DisplayName}" FontSize="8" FontFamily="{StaticResource Montserrat Medium}" MaxHeight="20" TextTrimming="CharacterEllipsis"
                                   VerticalAlignment="Bottom" HorizontalAlignment="Center" TextAlignment="Center" Margin="7,0,7,10" TextWrapping="Wrap"/>

                        <Image Source="{Binding Icon}" Width="26" Height="26" Margin="0,0,0,20"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Image x:Name="pinTipIcon"  Grid.Row="1" Grid.Column="2" Source="pack://application:,,,/WinMenu;component/Resources/Pin.png"
               Width="55" Height="55" Opacity="0.2" Margin="30,0,0,50"/>

        <TextBlock x:Name="pinTip" Grid.Row="1" Grid.Column="2" Text="В этом месте будут отображаться закреплённые в пуске программы" Width="200"
                   FontFamily="{StaticResource Montserrat Medium}" FontSize="9" VerticalAlignment="Center" Margin="30,60,0,0"
                   TextWrapping="Wrap" HorizontalAlignment="Center" TextAlignment="Center" Opacity="0.3"/>

        <Image x:Name="appsTipIcon" Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Source="pack://application:,,,/WinMenu;component/Resources/List.png"
               Width="50" Height="50" Opacity="0.2" Margin="0,0,0,50"/>

        <TextBlock x:Name="appsTip" Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Text="В этом месте будут отображаться список программ и папок"
                   FontFamily="{StaticResource Montserrat Medium}" FontSize="9" VerticalAlignment="Center" Margin="0,60,0,0"
                   TextWrapping="Wrap" HorizontalAlignment="Center" TextAlignment="Center" Opacity="0.3" Width="180"/>

        <StackPanel Grid.Column="2" Grid.Row="2" Margin="30,0,0,15">
            <Button Height="30" Style="{StaticResource buttonStyle}" Background="White" Click="Button_Click_1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Последние программы" FontSize="10" FontFamily="{StaticResource Montserrat Medium}"/>
                    <Path Stroke="Black" Margin="15,1,0,0" VerticalAlignment="Center" Data="M 0 0 L 4 3.5 L 0 7"/>
                </StackPanel>
            </Button>

            <Button Height="30" Style="{StaticResource buttonStyle}" Background="White" Margin="0,3,0,0" Click="Button_Click_2">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Недавние файлы" FontSize="10" FontFamily="{StaticResource Montserrat Medium}"/>
                    <Path Stroke="Black" Margin="15,1,0,0" VerticalAlignment="Center" Data="M 0 0 L 4 3.5 L 0 7"/>
                </StackPanel>
            </Button>

            <Button Height="80" Style="{StaticResource buttonStyle}" Margin="0,13,0,0" Click="Button_Click_3"
                HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" MouseRightButtonUp="Button_MouseRightButtonUp">

                <Button.Background>
                    <SolidColorBrush Color="White" Opacity="0.6"/>
                </Button.Background>

                <Grid>
                    <TextBlock Text="Состояние корзины" FontSize="9" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="13"
                           FontFamily="{StaticResource Montserrat Medium}" Opacity="0.4"/>

                    <Image Source="pack://application:,,,/WinMenu;component/Resources/RecycleBin.png" Width="32" Height="32"
                       HorizontalAlignment="Left" Margin="10,26,10,10"/>

                    <TextBlock x:Name="recycleBinSize" Text="Размер: ..." FontSize="9.5" HorizontalAlignment="Left" VerticalAlignment="Top"
                           Margin="53,35,15,15" FontFamily="{StaticResource Montserrat Medium}" Opacity="0.8"/>

                    <TextBlock x:Name="recycleBinCount" Text="Всего файлов: ..." FontSize="9.5" HorizontalAlignment="Left" Margin="53,48,15,15"
                           VerticalAlignment="Top" FontFamily="{StaticResource Montserrat Medium}" Opacity="0.8"/>
                </Grid>
            </Button>

            <Button Height="80" Style="{StaticResource buttonStyle}" Margin="0,7,0,0" Click="Button_Click_4"
                HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" MouseRightButtonUp="Button_MouseRightButtonUp_1">

                <Button.Background>
                    <SolidColorBrush Color="White" Opacity="0.6"/>
                </Button.Background>

                <Grid>
                    <TextBlock Text="Состояние автозагрузки" FontSize="9" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="13"
                           FontFamily="{StaticResource Montserrat Medium}" Opacity="0.4"/>

                    <Image Source="pack://application:,,,/WinMenu;component/Resources/Autorun.png" Width="27" Height="27"
                       HorizontalAlignment="Left" Margin="15,27,10,10"/>

                    <TextBlock x:Name="autoRunProgramCount" Text="Всего программ: ..." FontSize="9.5" HorizontalAlignment="Left" VerticalAlignment="Top"
                           Margin="53,35,15,15" FontFamily="{StaticResource Montserrat Medium}" Opacity="0.8"/>

                    <TextBlock x:Name="autoRunServiceCount" Text="Всего служб: ..." FontSize="9.5" HorizontalAlignment="Left" Margin="53,48,15,15"
                           VerticalAlignment="Top" FontFamily="{StaticResource Montserrat Medium}" Opacity="0.8"/>
                </Grid>
            </Button>

            <Button Height="80" Style="{StaticResource buttonStyle}" Margin="0,7,0,0" Click="Button_Click_5"
                HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" MouseRightButtonUp="Button_MouseRightButtonUp_2">

                <Button.Background>
                    <SolidColorBrush Color="White" Opacity="0.6"/>
                </Button.Background>

                <Grid>
                    <TextBlock Text="Временные файлы" FontSize="9" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="13"
                           FontFamily="{StaticResource Montserrat Medium}" Opacity="0.4"/>

                    <Image Source="pack://application:,,,/WinMenu;component/Resources/TempFolder.png" Width="29" Height="29"
                       HorizontalAlignment="Left" Margin="15,27,10,10"/>

                    <TextBlock x:Name="tempSize" Text="Размер: ..." FontSize="9.5" HorizontalAlignment="Left" VerticalAlignment="Top"
                           Margin="53,35,15,15" FontFamily="{StaticResource Montserrat Medium}" Opacity="0.8"/>

                    <TextBlock x:Name="tempPercentage" Text="...% от диска ..." FontSize="9.5" HorizontalAlignment="Left" Margin="53,48,15,15"
                           VerticalAlignment="Top" FontFamily="{StaticResource Montserrat Medium}" Opacity="0.8"/>
                </Grid>
            </Button>

            <ListBox x:Name="fastLinksList" BorderThickness="0" Margin="-5,10,0,0" Background="Transparent" HorizontalContentAlignment="Stretch"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled">

                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                        </Style.Resources>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border Height="30" CornerRadius="5" MouseLeftButtonUp="Border_MouseLeftButtonUp_1">
                            <Border.Background>
                                <SolidColorBrush Color="White" Opacity="0"/>
                            </Border.Background>

                            <Grid Margin="5,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Image Source="{Binding Icon}" Margin="0,6,10,6"/>

                                <TextBlock Grid.Column="1" Text="{Binding DisplayName}" FontSize="10" FontFamily="{StaticResource Montserrat Medium}"
                                       Margin="0,2,0,0" VerticalAlignment="Center"/>
                            </Grid>

                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Background.Opacity" Duration="0:0:0" To="1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>

                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Background.Opacity" Duration="0:0:0" To="0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>

        <Popup x:Name="lastOpenedMenu" Width="270">
            <Grid>
                <Border>
                    <ListBox x:Name="lastOpenedList" SelectionChanged="lastOpenedList_SelectionChanged"/>
                </Border>

                <StackPanel x:Name="lastProgramsTip">
                    <Image Source="pack://application:,,,/WinMenu;component/Resources/LastPrograms.png" Width="27" Height="27" Margin="20,0,15,0"/>
                    <TextBlock Text="Тут будет отображаться история запущенных программ" MaxWidth="200"/>
                </StackPanel>
            </Grid>
        </Popup>

        <Popup x:Name="recentFilesMenu" Width="270">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="33"/>
                </Grid.RowDefinitions>

                <Border Grid.RowSpan="2"/>
                <ListBox x:Name="recentFilesList" SelectionChanged="lastOpenedList_SelectionChanged" Margin="1,7,1,7"/>

                <StackPanel x:Name="recentFilesTip">
                    <Image Source="pack://application:,,,/WinMenu;component/Resources/RecentFiles.png" Width="27" Height="27" Margin="20,0,15,0"/>
                    <TextBlock Text="Тут будут отображаться недавно использованые файлы" MaxWidth="200"/>
                </StackPanel>

                <Grid Margin="0" Grid.Row="1" VerticalAlignment="Bottom">
                    <Rectangle Fill="Black" Height="1" VerticalAlignment="Top" Opacity="0.05"/>

                    <Border Height="33" CornerRadius="0,0,5,5" Cursor="Hand" MouseLeftButtonUp="Border_MouseLeftButtonUp">
                        <Border.Background>
                            <SolidColorBrush Color="Black" Opacity="0.02"/>
                        </Border.Background>

                        <TextBlock Text="Открыть папку" FontFamily="{StaticResource Montserrat Medium}" FontSize="9"
                                   HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#0070C0"/>
                    </Border>
                </Grid>
            </Grid>
        </Popup>

        <Grid Grid.Row="3" Grid.ColumnSpan="4">
            <Border BorderThickness="0,1,0,0">
                <Border.Background>
                    <SolidColorBrush Color="Black" Opacity="0.03"/>
                </Border.Background>

                <Border.BorderBrush>
                    <SolidColorBrush Color="Black" Opacity="0.1"/>
                </Border.BorderBrush>
            </Border>

            <Border Width="130" Height="25" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5"
                    Margin="35,0,0,0" Cursor="Arrow" CornerRadius="5" PreviewMouseLeftButtonUp="Border_PreviewMouseLeftButtonUp_1">

                <Border.Background>
                    <SolidColorBrush Color="#0070C0"/>
                </Border.Background>

                <Border.RenderTransform>
                    <ScaleTransform/>
                </Border.RenderTransform>

                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.1" To="0.97"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.1" To="0.97"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>

                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.1" To="1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.1" To="1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="28"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>

                    <Image Source="pack://application:,,,/WinMenu;component/Resources/Off.png" Margin="5,4,4,4" HorizontalAlignment="Left"/>
                    <TextBlock Grid.Column="1" Visibility="Visible" Text="Выключение" Foreground="White" Opacity="0.9"
                               FontFamily="{StaticResource Montserrat Medium}" VerticalAlignment="Center" FontSize="10" Margin="0,0,8,0"/>

                    <Border x:Name="offButtonExpend" BorderThickness="1,0,0,0" Grid.Column="2" Cursor="Hand" CornerRadius="0,5,5,0">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="White" Opacity="0.15"/>
                        </Border.BorderBrush>

                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black" Opacity="0"/>
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <SolidColorBrush Color="Black" Opacity="0.1"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Path Stroke="White" VerticalAlignment="Center" Margin="0,1,0,0" HorizontalAlignment="Center"
                              Data="M 0 3.5 L 3.5 0 L 7 3.5" Opacity="0.6"/>
                    </Border>
                </Grid>
            </Border>

            <Popup x:Name="offMenu" Width="260">
                <Grid>
                    <Border>
                        <ListBox x:Name="offList" Tag="invert" SelectionChanged="offList_SelectionChanged"/>
                    </Border>
                </Grid>
            </Popup>

            <Border Width="25" Height="25" Grid.Row="3" Grid.Column="2" HorizontalAlignment="Left" Margin="175,0,0,0" CornerRadius="5"
                    Opacity="0.7" MouseLeftButtonUp="Border_PreviewMouseLeftButtonUp" Cursor="Hand">

                <Border.Background>
                    <SolidColorBrush Color="Black" Opacity="0"/>
                </Border.Background>

                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Background.Opacity" Duration="0:0:0.15" To="0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>

                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Background.Opacity" Duration="0:0:0.15" To="0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Image Source="pack://application:,,,/WinMenu;component/Resources/Service.png" Margin="4"/>
            </Border>

        </Grid>

        <TextBlock x:Name="userInfo" Text="Учётная запись: ..." Grid.Row="3" Grid.ColumnSpan="3" FontFamily="{StaticResource Montserrat Medium}"
                   FontSize="9" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" PreviewMouseLeftButtonUp="userInfo_PreviewMouseLeftButtonUp"
                   Margin="240,0,0,0" Opacity="0.4" Cursor="Hand" MaxWidth="140" HorizontalAlignment="Left">

            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextDecorations" Value="Underline"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <TextBlock x:Name="pcWorkInfo" Text="ПК работает ..." Grid.Row="3" Grid.ColumnSpan="3"
                   FontFamily="{StaticResource Montserrat Medium}" FontSize="9" VerticalAlignment="Center"
                   Margin="400,0,0,0" Opacity="0.4" TextTrimming="CharacterEllipsis"/>

        <Popup x:Name="moreMenu" Width="300">
            <Grid>
                <Border>
                    <ListBox x:Name="moreMenuList" Tag="invert" SelectionChanged="moreMenuList_SelectionChanged"/>
                </Border>
            </Grid>
        </Popup>

        <Popup x:Name="recycleBinMenu" Width="260" Placement="Mouse">
            <Grid>
                <Border>
                    <ListBox x:Name="recycleBinList" Tag="invert" SelectionChanged="recycleBitList_SelectionChanged"/>
                </Border>
            </Grid>
        </Popup>

        <Popup x:Name="autorunMenu" Width="270" Placement="Mouse">
            <Grid>
                <Border>
                    <ListBox x:Name="autorunList" Tag="invert" SelectionChanged="autorunList_SelectionChanged"/>
                </Border>
            </Grid>
        </Popup>

        <Popup x:Name="tempMenu" Width="270" Placement="Mouse">
            <Grid>
                <Border>
                    <ListBox x:Name="tempList" Tag="invert" SelectionChanged="tempList_SelectionChanged"/>
                </Border>
            </Grid>
        </Popup>

        <Border Grid.Column="1" Width="25" Height="25" HorizontalAlignment="Right" MouseLeftButtonUp="Border_MouseLeftButtonUp_2"
                VerticalAlignment="Bottom" CornerRadius="15" Margin="0,0,0,-3" Cursor="Hand">

            <Border.Background>
                <SolidColorBrush Color="Black" Opacity="0"/>
            </Border.Background>

            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Background.Opacity" Duration="0:0:0.15" To="0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Background.Opacity" Duration="0:0:0.15" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Image Source="pack://application:,,,/WinMenu;component/Resources/Search.png" Margin="3"/>
        </Border>

        <Border x:Name="searchPanel" Grid.Column="1" Grid.Row="1" Height="40" VerticalAlignment="Top" Background="White"
                CornerRadius="7" Margin="0,10,0,0" BorderThickness="3" Visibility="Collapsed">

            <Border.BorderBrush>
                <SolidColorBrush Color="#0070C0"/>
            </Border.BorderBrush>

            <Border.RenderTransform>
                <ScaleTransform/>
            </Border.RenderTransform>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>

                <TextBox x:Name="searchBox" Margin="10,0,0,0" BorderThickness="0" FontFamily="{StaticResource Montserrat Medium}"
                         FontSize="11" VerticalAlignment="Center" Background="Transparent"/>

                <TextBlock Text="Текст для поиска" VerticalAlignment="Center" Margin="13" IsHitTestVisible="False"
                           Opacity="0.2" FontFamily="{StaticResource Montserrat Medium}" FontSize="10">

                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=searchBox, Path=Text}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Border Grid.Column="1" Width="20" Height="20"
                     CornerRadius="10" Cursor="Hand" MouseLeftButtonUp="Border_MouseLeftButtonUp_3">

                    <Border.Background>
                        <SolidColorBrush Color="Black" Opacity="0"/>
                    </Border.Background>

                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Background.Opacity" Duration="0:0:0.15" To="0.05"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>

                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Background.Opacity" Duration="0:0:0.15" To="0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

                <Line Grid.Column="1" StrokeThickness="0.5" Stroke="DimGray" X1="11" Y1="13" X2="19" Y2="21" IsHitTestVisible="False"/>
                <Line Grid.Column="1" StrokeThickness="0.5" Stroke="DimGray" X1="19" Y1="13" X2="11" Y2="21" IsHitTestVisible="False"/>
            </Grid>
        </Border>

        <Popup x:Name="appMenu" Width="290" Placement="Mouse">
            <Grid>
                <Border>
                    <Grid Margin="0,55,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto" MinHeight="27"/>
                        </Grid.RowDefinitions>

                        <ListBox x:Name="appMenuList" Tag="invert" SelectionChanged="appMenuList_SelectionChanged"/>
                        <Rectangle Grid.Row="1" Height="1" Fill="Black" Opacity="0.04" VerticalAlignment="Top"/>

                        <TextBlock x:Name="appMenuRecentStatus" Text="Загрузка элементов..." Grid.Row="1" FontSize="9" Opacity="0.4"
                                   FontFamily="{StaticResource Montserrat Medium}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <ListBox x:Name="appMenuRecentList" Grid.Row="1" SelectionChanged="appMenuRecentList_SelectionChanged"/>
                    </Grid>
                </Border>

                <Grid VerticalAlignment="Top" Margin="0,0,0,123">
                    <Border BorderThickness="0,0,0,1" Height="55" Style="{x:Null}" CornerRadius="5,5,0,0" Margin="1">
                        <Border.Background>
                            <SolidColorBrush Color="Black" Opacity="0.01"/>
                        </Border.Background>

                        <Border.BorderBrush>
                            <SolidColorBrush Color="Black" Opacity="0.07"/>
                        </Border.BorderBrush>
                    </Border>

                    <Image x:Name="appMenuIcon" Width="22" Height="22" Margin="17,0,0,0" HorizontalAlignment="Left"/>

                    <TextBlock x:Name="appMenuName" VerticalAlignment="Center" FontSize="10" Margin="50,0,0,13" MaxWidth="170"
                               HorizontalAlignment="Left" FontFamily="{StaticResource Montserrat Medium}" TextTrimming="CharacterEllipsis"/>

                    <TextBlock x:Name="appMenuPath" VerticalAlignment="Center" FontSize="8" Margin="50,17,0,0" TextTrimming="CharacterEllipsis"
                               HorizontalAlignment="Left" FontFamily="{StaticResource Montserrat Medium}" Opacity="0.3" MaxWidth="170"/>
                </Grid>
            </Grid>
        </Popup>
    </Grid>
</Window>
